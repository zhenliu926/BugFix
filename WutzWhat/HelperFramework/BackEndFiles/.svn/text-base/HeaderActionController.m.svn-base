//
//  HeaderActionController.m
//  Swella
//
//  Created by Mac Book on 3/3/12.
//  Copyright (c) 2012 Style360. All rights reserved.
//

#import "HeaderActionController.h"
#import "ClientHomePage.h"
#import "ProviderHomePage.h"
#import "LoginViewController.h"
#import "ProviderSettingVC.h"
#import "ClientSettingVC.h"
#import "Constants.h"
#import "SignUpViewController.h"

@implementation HeaderActionController
@synthesize controller;

-(id)init
{
    if (self = [super init]) {
        headerVC = [HeaderViewController instance];
        settings = [AppSettings instance];
    }
    return self;
}
-(void) updateUserName:(NSString *)firstName andLastName:(NSString *)lastName
{
    [headerVC updateUserName:firstName andLastName:lastName];
}

#pragma mark - Header Stuff
-(void) HanldeLoginAction {
    //[self releaseCalendarCachedData];
    
    if (headerVC.loginButton.tag == 1) {
        
		[headerVC setUserName:nil];
		
    }
    
    {
		
        
        NSArray *arr = [controller.navigationController viewControllers];
        bool status = NO;
        UIViewController *v ;
        for(UIViewController * vc in arr)
        {
            if([vc isKindOfClass:[LoginViewController class]])
            {
                status = YES;
                v = vc;
                break;
            }
        }
        if(status)
        {
            [controller.navigationController popToViewController:v animated:NO];
            
        }
        else
        {
        
        
        LoginViewController *loginVC ;
        if (IS_IPHONE) {
			loginVC = [[LoginViewController alloc]initWithNibName:@"LoginViewController" bundle:nil];			
		}else{
			loginVC = [[LoginViewController alloc]initWithNibName:@"LoginViewController_iPad" bundle:nil];		
		}
        
        [controller.navigationController pushViewController:loginVC animated:NO];
        }
    }
    
}
-(void) HandleSpecialistsApplyAction {
	//[self releaseCalendarCachedData];
}
-(void) HandleJoinAction{
	//[self releaseCalendarCachedData];
   
    NSArray *arr = [controller.navigationController viewControllers];
    bool status = NO;
    UIViewController *v ;
    for(UIViewController * vc in arr)
    {
        if([vc isKindOfClass:[SignUpViewController class]])
        {
            status = YES;
            v = vc;
            break;
        }
    }
    if(status)
    {
        [controller.navigationController popToViewController:v animated:NO];
        
    }
    else
    {
        SignUpViewController *signUpVC;
        if(IS_IPHONE){
            signUpVC = [[[SignUpViewController alloc]initWithNibName:@"SignUpViewController" bundle:nil]autorelease];	
        }else{
            signUpVC = [[[SignUpViewController alloc]initWithNibName:@"SignUpViewController_iPad" bundle:nil]autorelease];	
        }    
    [controller.navigationController pushViewController:signUpVC animated:YES];
    }

}
-(void) HandleMenuAction{
   // [self releaseCalendarCachedData];
	[controller.navigationController popToRootViewControllerAnimated:NO];
}

-(void) HandleUserHomeAction{
	//[self releaseCalendarCachedData];
    
	NSUserDefaults *userDefaults = [NSUserDefaults standardUserDefaults];
    NSMutableDictionary *userInfo = [userDefaults objectForKey:@"LoggedInInfo"];
    [userDefaults synchronize];
	
	NSLog(@"userInfo = %@",userInfo);
	
	
	if ([[userInfo objectForKey:@"data"]objectForKey:@"ProviderId"]) {
		//it is client
		NSArray *arr = [controller.navigationController viewControllers];
		bool status = NO;
		UIViewController *v ;
		for(UIViewController * vc in arr)
		{
			if([vc isKindOfClass:[ProviderHomePage class]])
			{
				status = YES;
				v = vc;
				break;
			}
		}
		if(status)
		{
			[controller.navigationController popToViewController:v animated:NO];
		}
        else
        {
            ProviderHomePage *homePage;
            if (IS_IPAD) {
                homePage = [[[ProviderHomePage alloc]initWithNibName:@"ProviderHomePage_iPad" bundle:nil]autorelease];	
            }
            else
            {
                homePage = [[[ProviderHomePage alloc]initWithNibName:@"ProviderHomePage" bundle:nil]autorelease];
            }
            [controller.navigationController pushViewController:homePage animated:YES];
        }
	}
	else if ([[userInfo objectForKey:@"data"]objectForKey:@"ClientId"]){
		NSArray *arr = [controller.navigationController viewControllers];
		bool status = NO;
		UIViewController *v ;
		for(UIViewController * vc in arr)
		{
			if([vc isKindOfClass:[ClientHomePage class]])
			{
				status = YES;
				v = vc;
				break;
			}
		}
		if(status)
		{
			[controller.navigationController popToViewController:v animated:NO];
		}
        else
        {
            ClientHomePage *homePage;
            if (IS_IPAD) {
                homePage = [[[ClientHomePage alloc]initWithNibName:@"ClientHomePage_iPad" bundle:nil]autorelease];	
            }else{
                homePage = [[[ClientHomePage alloc]initWithNibName:@"ClientHomePage" bundle:nil]autorelease];
            }
            
            [controller.navigationController pushViewController:homePage animated:NO];
        
        }
	}
}
-(void) HandleSettingAction
{
    //[self releaseCalendarCachedData];
    
    NSUserDefaults *userDefaults = [NSUserDefaults standardUserDefaults];
    NSMutableDictionary *userInfo = [userDefaults objectForKey:@"LoggedInInfo"];
    [userDefaults synchronize];
	
	NSLog(@"userInfo = %@",userInfo);
    
    NSArray *arr = [controller.navigationController viewControllers];
    bool status = NO;
    UIViewController *v ;
    if ([[userInfo objectForKey:@"data"]objectForKey:@"ProviderId"])
    {    
    for(UIViewController * vc in arr)
    {
        if([vc isKindOfClass:[ProviderSettingVC class]])
        {
            status = YES;
            v = vc;
            break;
        }
    }
    if(status)
    {
        [controller.navigationController popToViewController:v animated:NO];
    }
    else
    {
		
        ProviderSettingVC *settingVC;
		if (IS_IPHONE) {
			settingVC = [[ProviderSettingVC alloc] initWithNibName:@"ProviderSettingVC" bundle:nil];
		}
		else{
			settingVC = [[ProviderSettingVC alloc] initWithNibName:@"ProviderSettingVC_iPad" bundle:nil];
			
		}

        [controller.navigationController pushViewController:settingVC animated:NO];
        [settingVC release];
    }
    }
    else if ([[userInfo objectForKey:@"data"]objectForKey:@"ClientId"])
    {    
        for(UIViewController * vc in arr)
        {
            if([vc isKindOfClass:[ClientSettingVC class]])
            {
                status = YES;
                v = vc;
                break;
            }
        }
        if(status)
        {
            [controller.navigationController popToViewController:v animated:NO];
            
        }
        else
        {
			ClientSettingVC *settingVC;
            if (IS_IPHONE) {
				settingVC = [[ClientSettingVC alloc] initWithNibName:@"ClientSettingVC" bundle:nil];	
			}
			else{
				settingVC = [[ClientSettingVC alloc] initWithNibName:@"ClientSettingVC_iPad" bundle:nil];
			}
			
            [controller.navigationController pushViewController:settingVC animated:NO];
            [settingVC release];
        }
    }
    
}

-(void) releaseCalendarCachedData
{
    if (settings.mapProviderDictionary != nil ) {
        [settings.mapProviderDictionary release];
        settings.mapProviderDictionary = nil;
    }
    if (settings.clientCalendarDictionary != nil ) {
        [settings.clientCalendarDictionary release];
        settings.clientCalendarDictionary = nil;
    }
    if (settings.providerCalendarDictionary != nil ) {
        [settings.providerCalendarDictionary release];
        settings.providerCalendarDictionary = nil;
    }
}

-(void) HandleBackAction
{
    [controller.navigationController popViewControllerAnimated:YES];
}

- (void)dealloc {
    NSLog(@"HandleActionController->dealloc");
    [controller release];
    [super dealloc];
}

@end
