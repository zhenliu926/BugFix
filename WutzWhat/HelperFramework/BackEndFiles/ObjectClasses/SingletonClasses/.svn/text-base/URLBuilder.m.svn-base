//
//  URLBuilder.m
//  AppSettings
//
//  Created by uk on 12/13/11.
//  Copyright (c) 2011 __MyCompanyName__. All rights reserved.
//

#import "URLBuilder.h"
#import "AppSettings.h"
#import "Constants.h"
#import "JSON.h"
@implementation URLBuilder



+ (NSURL*)urlForMethod:(NSString*)method withJsonParameters:(NSMutableDictionary*)params{
    
    NSURL* result;
    
    NSString *requestType = [params valueForKey:WEB_REQUEST];
	[params removeObjectForKey:WEB_REQUEST];

    AppSettings *settings=[AppSettings instance];
    SBJsonWriter *p = [[SBJsonWriter alloc] init];
    NSString *jsonStr = [p stringWithObject:params];
    NSLog(@"jsonStr=%@",jsonStr);
    
    NSString *url=[NSString stringWithFormat:@"%@%@%@",[settings getBaseAddressOfType:requestType],method,jsonStr];
    NSLog(@"urlwithComa=%@",url);
	NSString *encodedURL=[url stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding];
    
    result = [NSURL URLWithString:encodedURL];
    return result;         
    
}

+ (NSURL*)urlForMethod:(NSString*)method withParameters:(NSMutableDictionary*)params{
    
    NSURL* result;
    NSString *requestType = @"";//
    @try {
       requestType = [params valueForKey:WEB_REQUEST];
        [params removeObjectForKey:WEB_REQUEST];
        
    }
    @catch (NSException *exception) {
        
    }
    @finally {
        
    }
    
    NSMutableString *queryString = [[[NSMutableString alloc] init]autorelease];
    int paramCounter = 0;
    for(NSString *key in [params allKeys]){
        paramCounter++;
        id object= [params objectForKey:key];
        
        if (object){
            if (paramCounter > 1) {
            [queryString appendFormat:@"&%@=%@", key, [params objectForKey:key]];    
            }
            else
            [queryString appendFormat:@"%@=%@", key, [params objectForKey:key]];
        }else{
            [NSException exceptionWithName:[NSString stringWithFormat:@"%s",__PRETTY_FUNCTION__] reason:@"Invalid key value pair" userInfo:nil]; 
        }          
    }
    
	
    AppSettings *settings=[AppSettings instance];
    
    NSString *url=[NSString stringWithFormat:@"%@%@%@",[settings getBaseAddressOfType:requestType],method,queryString];
    NSLog(@"urlwithComa=%@",url);

	NSString *encodedURL=[url stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding];
    
    result = [NSURL URLWithString:encodedURL];
    
    return result;         
    
}

+ (NSURL*)lookupUrlForMethod:(NSString*)method withParameters:(NSDictionary*)params{
    
    NSURL* result;
    
   	
    AppSettings *settings=[AppSettings instance];
    
    NSString *url=[NSString stringWithFormat:@"%@%@",[settings getLookupBaseAddress],method];
    NSLog(@"urlwithComa=%@",url);

	NSString *encodedURL=[url stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding];
    
    result = [NSURL URLWithString:encodedURL];
    
    return result;         
    
}


#pragma mark - New Builder withToken

+(NSString*) getToken{
	
    NSUserDefaults *userDefaults = [NSUserDefaults standardUserDefaults];
    NSMutableDictionary *userInfo = [userDefaults objectForKey:@"LoggedInInfo"];
    [userDefaults synchronize];
    
    
    NSString *tokenFromServer = [userInfo objectForKey:WEB_TOKEN];
    NSLog(@"tokenFromServer=%@",tokenFromServer);
    AppSettings *settings = [AppSettings instance];
    NSString *md5Token = [settings getMD5Token:tokenFromServer];
    NSString *tokenSendToServer = nil;
    NSMutableDictionary *data = [userInfo objectForKey:WEB_DATA];
    if ((NSString*)[data valueForKey:JSON_CLIENT_ID]!=nil) {
        tokenSendToServer = [NSString stringWithFormat:@"token=%@,%@,%@",(NSString*)[data valueForKey:JSON_CLIENT_ID],LOGGED_BY_CLIENT,md5Token];
    }
    else 
        tokenSendToServer = [NSString stringWithFormat:@"token=%@,%@,%@",(NSString*)[data valueForKey:JSON_PROVIDER_ID],LOGGED_BY_PROVIDER,md5Token];
    NSLog(@"tokenSendToServer=%@",tokenSendToServer);
		
	return tokenSendToServer;
}


+ (NSURL*)urlWithAppendedTokenForMethod:(NSString*)method withParameters:(NSMutableDictionary*)params{
    
    NSURL* result;
    
    NSMutableString *queryString = [[[NSMutableString alloc] init]autorelease];
    for(NSString *key in [params allKeys]){
				[queryString appendFormat:@"%@=%@&", key, [params objectForKey:key]];    
    }
    
	if([queryString length]>0)
		queryString =[NSString stringWithFormat:@"%@",[queryString substringToIndex:[queryString length]-1]];

	//queryString = [NSString stringWithFormat:@"%@&%@",queryString,[URLBuilder getToken]];
	
    AppSettings *settings=[AppSettings instance];
    
	NSString *url=[NSString stringWithFormat:@"%@%@",[settings getBaseAddress],queryString];	
    NSLog(@"urlwithComa=%@",url);
	
	NSString *encodedURL=[url stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding];
    
    result = [NSURL URLWithString:encodedURL];
    
    return result;         
    
}

+ (NSURL*)urlWithTokenForMethod:(NSString*)method withJsonParameters:(NSMutableDictionary*)params {
    
    NSURL* result;
    
	NSLog(@"%@",[params class]);
    NSString *requestType = [params valueForKey:WEB_REQUEST];
	[params removeObjectForKey:WEB_REQUEST];
	
    AppSettings *settings=[AppSettings instance];
    SBJsonWriter *p = [[SBJsonWriter alloc] init];
    NSString *jsonStr = [p stringWithObject:params];
    NSLog(@"jsonStr=%@",jsonStr);
    
    NSString *url=[NSString stringWithFormat:@"%@%@%@&%@",[settings getBaseAddressOfType:requestType],method,jsonStr,[URLBuilder getToken]];
    
	NSLog(@"urlwithComa=%@",url);
	NSString *encodedURL=[url stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding];
    
    result = [NSURL URLWithString:encodedURL];
    return result;         
    
}


@end
